process {

    cpus   = { 1      * task.attempt }
    memory = { 6.GB   * task.attempt }
    time   = { 4.h    * task.attempt }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    withLabel:process_single {
        cpus   = { 1                   }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withLabel:process_low {
        cpus   = { 2     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 4.h   * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 6     * task.attempt }
        memory = { 36.GB * task.attempt }
        time   = { 8.h   * task.attempt }
    }
    withLabel:process_high {
        cpus   = { 12    * task.attempt }
        memory = { 72.GB * task.attempt }
        time   = { 16.h  * task.attempt }
    }
    withLabel:process_long {
        time   = { 20.h  * task.attempt }
    }
    withLabel:process_high_memory {
        memory = { 200.GB * task.attempt }
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}

// Max resources
process {
    resourceLimits = [
        cpus: 12,
        memory: '16.GB',
        time: '1.hour'
    ]
}

profiles {
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
    }
    conda {
        conda.enabled           = true
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
    }
    podman {
        podman.enabled          = true
        podman.userEmulation    = true
        podman.runOptions       = "--runtime crun --platform linux/x86_64 --systemd=always"
    }
    docker {
        docker.enabled          = true
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    test { includeConfig './conf/test.config' }
}

docker.registry                 = 'quay.io'
podman.registry                 = 'quay.io'
singularity.registry            = 'quay.io'
apptainer.registry              = 'quay.io'

// Increase time available to build Conda environment
conda {
    createTimeout               = "120 min"
}

manifest {
    name                        = 'jguhlin/EDTA'
    nextflowVersion             = '!>=23.04.0'
    version                     = '0.1.0dev'
}

includeConfig 'conf/modules.config'
